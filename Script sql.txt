CREATE TABLE Donations(
   id_donation INT,
   user_id_ INT NOT NULL,
   streamer_id INT NOT NULL,
   amount DECIMAL(10,2),
   date_creation DATETIME,
   message TEXT,
   PRIMARY KEY(id_donation)
);

CREATE TABLE Ads(
   id_ad INT,
   stream_id INT NOT NULL,
   advertiser_name VARCHAR(255) NOT NULL,
   ad_start_time DATE NOT NULL,
   ad_end_time DATE NOT NULL,
   ad_duration INT NOT NULL,
   date_creation DATETIME,
   PRIMARY KEY(id_ad)
);

CREATE TABLE Moderators(
   id_moderator INT,
   streamer_id INT NOT NULL,
   date_creation DATETIME,
   role_id VARCHAR(50) NOT NULL,
   PRIMARY KEY(id_moderator)
);

CREATE TABLE Reports(
   id_report INT,
   reporter_id_INT INT NOT NULL,
   reported_user_id INT NOT NULL,
   report_reason TEXT NOT NULL,
   date_creation DATETIME,
   status VARCHAR(50),
   PRIMARY KEY(id_report)
);

CREATE TABLE Bans(
   id_ban INT,
   user_id INT NOT NULL,
   moderator_id INT NOT NULL,
   user_id_1 INT NOT NULL,
   ban_reason TEXT NOT NULL,
   date_creation DATETIME,
   is_permanent LOGICAL,
   PRIMARY KEY(id_ban)
);

CREATE TABLE Chats(
   id_chat INT,
   stream_id INT,
   user_id INT,
   message TEXT NOT NULL,
   date_creation DATETIME,
   PRIMARY KEY(id_chat)
);

CREATE TABLE Emotes(
   id_emote INT,
   name VARCHAR(255) NOT NULL,
   image_url VARCHAR(255),
   user_id INT,
   is_global LOGICAL,
   PRIMARY KEY(id_emote)
);

CREATE TABLE Categories(
   id_category INT,
   name VARCHAR(255) NOT NULL,
   description TEXT,
   image_url VARCHAR(255),
   PRIMARY KEY(id_category)
);

CREATE TABLE Tags(
   id_tag INT,
   name VARCHAR(255) NOT NULL,
   description TEXT,
   PRIMARY KEY(id_tag)
);

CREATE TABLE Followers(
   id_follower INT,
   follower_user_id INT,
   date_creation DATETIME,
   followed_user_id INT,
   PRIMARY KEY(id_follower)
);

CREATE TABLE Advertising_Campaigns(
   id_campaign COUNTER,
   start_date DATETIME NOT NULL,
   end_date DATETIME NOT NULL,
   budget DECIMAL(10,2),
   date_creation DATETIME,
   PRIMARY KEY(id_campaign)
);

CREATE TABLE Stream_Advertisements(
   id_stream_ad COUNTER,
   stream_id INT,
   campaign_id INT,
   ad_start_time DATETIME NOT NULL,
   ad_end_time DATETIME NOT NULL,
   date_creation DATETIME,
   PRIMARY KEY(id_stream_ad)
);

CREATE TABLE Channel_Moderation_Actions(
   id_mod_action COUNTER,
   moderator_id INT,
   user_id INT,
   action_type VARCHAR(255) NOT NULL,
   action_reason TEXT,
   date_creation DATETIME,
   PRIMARY KEY(id_mod_action)
);

CREATE TABLE Subscriptions_Tiers(
   id_tier COUNTER,
   s_t_name VARCHAR(255) NOT NULL,
   price DECIMAL(10,2) NOT NULL,
   PRIMARY KEY(id_tier)
);

CREATE TABLE Channel_Points(
   id_points COUNTER,
   user_id INT,
   streamer_id INT,
   points_amonts INT NOT NULL,
   date_creation DATETIME,
   PRIMARY KEY(id_points)
);

CREATE TABLE Channel_Points_Rewards(
   id_reward COUNTER,
   streamer_id INT,
   reward_name VARCHAR(255) NOT NULL,
   points_required INT NOT NULL,
   is_active LOGICAL,
   PRIMARY KEY(id_reward)
);

CREATE TABLE Channel_Points_Redemptions(
   id_redemption COUNTER,
   reward_id INT,
   date_creation DATETIME,
   status VARCHAR(255) NOT NULL,
   user_id INT,
   PRIMARY KEY(id_redemption)
);

CREATE TABLE Stream_Categories_History(
   id_category_history COUNTER,
   stream_id INT,
   strat_time DATETIME NOT NULL,
   end_time DATETIME,
   category_id INT,
   date_creation DATETIME,
   PRIMARY KEY(id_category_history)
);

CREATE TABLE Stream_Chat_Bans(
   id_chat_ban INT,
   user_id INT,
   moderator_id INT,
   stream_id INT,
   ban_reason TEXT NOT NULL,
   date_creation DATETIME,
   is_temporary LOGICAL,
   ban_duration DATE,
   PRIMARY KEY(id_chat_ban)
);

CREATE TABLE Stream_Events(
   id_event COUNTER,
   stream_id INT,
   event_type VARCHAR(255) NOT NULL,
   event_user_id INT,
   date_creation DATETIME,
   PRIMARY KEY(id_event)
);

CREATE TABLE Achievements_1(
   id_achievments INT,
   description_ TEXT,
   Points INT NOT NULL,
   name VARCHAR(255) NOT NULL,
   PRIMARY KEY(id_achievments)
);

CREATE TABLE User_achievements_1(
   id_Users_achievements INT,
   user_id INT NOT NULL,
   achievement_id INT NOT NULL,
   date_creation DATETIME NOT NULL,
   PRIMARY KEY(id_Users_achievements)
);

CREATE TABLE Notifications_1(
   id_notification INT,
   user_id INT NOT NULL,
   notification_type VARCHAR(255) NOT NULL,
   message TEXT,
   is_read LOGICAL,
   PRIMARY KEY(id_notification)
);

CREATE TABLE Roles_1(
   id_role INT,
   role_name VARCHAR(255) NOT NULL,
   permissions TEXT NOT NULL,
   PRIMARY KEY(id_role)
);

CREATE TABLE Payments_1(
   id_payment TEXT,
   user_id INT NOT NULL,
   payment_method VARCHAR(50) NOT NULL,
   amount DECIMAL(10,2) NOT NULL,
   date_creation DATETIME,
   subscription_id INT,
   PRIMARY KEY(id_payment)
);

CREATE TABLE Stream_tags_1(
   id_stream_tag INT,
   stream_id INT NOT NULL,
   tag_id INT NOT NULL,
   PRIMARY KEY(id_stream_tag)
);

CREATE TABLE Poll_Options(
   id_option VARCHAR(50),
   poll_id INT NOT NULL,
   option_text TEXT NOT NULL,
   _vote_count INT,
   PRIMARY KEY(id_option)
);

CREATE TABLE User_Notifications_(
   id_notification_log INT,
   id_user INT NOT NULL,
   id_notification INT NOT NULL,
   read_status LOGICAL,
   _notification_timestamp DATETIME,
   user_id VARCHAR(50),
   notification_id VARCHAR(50),
   PRIMARY KEY(id_notification_log)
);

CREATE TABLE RaidLogs(
   id_raid_log INT,
   id_raid INT NOT NULL,
   id_user INT NOT NULL,
   raid_timestamp DATETIME,
   raid_id VARCHAR(50),
   user_id VARCHAR(50),
   PRIMARY KEY(id_raid_log)
);

CREATE TABLE PasswordResets(
   id_reset INT,
   id_user INT NOT NULL,
   request_time_ DATETIME,
   reset_token VARCHAR(255),
   token_expiration_ DATETIME,
   user_id VARCHAR(50),
   PRIMARY KEY(id_reset)
);

CREATE TABLE LoginAttempts(
   id_attempt INT,
   id_user INT NOT NULL,
   attempt_time_ DATETIME,
   success LOGICAL,
   ip_address_ VARCHAR(45),
   user_id VARCHAR(50),
   PRIMARY KEY(id_attempt)
);

CREATE TABLE UserReports(
   id_reports INT,
   id_reported_user INT NOT NULL,
   id_reporting_user INT NOT NULL,
   report_reason_ TEXT,
   report_date DATETIME,
   report_status VARCHAR(50),
   user_id VARCHAR(50),
   PRIMARY KEY(id_reports)
);

CREATE TABLE Subscriptions(
   id_subscription INT,
   user_id INT NOT NULL,
   streamer_id INT NOT NULL,
   subscription_tier INT NOT NULL,
   subscription_date DATETIME,
   is_active LOGICAL,
   tier_id INT NOT NULL,
   date_creation DATETIME,
   id_tier INT,
   PRIMARY KEY(id_subscription),
   FOREIGN KEY(id_tier) REFERENCES Subscriptions_Tiers(id_tier)
);

CREATE TABLE Tag_Subscriptions(
   id_tag_subscription INT,
   user_id_ INT NOT NULL,
   tag_id INT NOT NULL,
   date_creation DATETIME,
   id_tag INT NOT NULL,
   PRIMARY KEY(id_tag_subscription),
   FOREIGN KEY(id_tag) REFERENCES Tags(id_tag)
);

CREATE TABLE Users(
   id_user INT,
   username VARCHAR(255) NOT NULL,
   email VARCHAR(255) NOT NULL,
   password VARCHAR(255) NOT NULL,
   date_of_creation DATETIME,
   role INT NOT NULL,
   ptofile_picture VARCHAR(255),
   is_verified LOGICAL NOT NULL,
   id_follower INT,
   id_chat_ban INT,
   PRIMARY KEY(id_user),
   UNIQUE(password),
   UNIQUE(is_verified),
   FOREIGN KEY(id_follower) REFERENCES Followers(id_follower),
   FOREIGN KEY(id_chat_ban) REFERENCES Stream_Chat_Bans(id_chat_ban)
);

CREATE TABLE Stream_Raids(
   id_raid COUNTER,
   stream_id INT,
   target_stream_id INT,
   id_user INT NOT NULL,
   PRIMARY KEY(id_raid),
   FOREIGN KEY(id_user) REFERENCES Users(id_user)
);

CREATE TABLE Users_sessions_1(
   id_session INT,
   user_id INT NOT NULL,
   login_time DATETIME NOT NULL,
   logout_time DATETIME,
   ip_adress VARCHAR(45) NOT NULL,
   date_creation DATETIME,
   id_user INT NOT NULL,
   PRIMARY KEY(id_session),
   UNIQUE(id_user),
   FOREIGN KEY(id_user) REFERENCES Users(id_user)
);

CREATE TABLE Users_preferences_1(
   id_preference INT,
   user_id INT NOT NULL,
   preference_type VARCHAR(255) NOT NULL,
   valeur VARCHAR(255),
   id_user INT NOT NULL,
   PRIMARY KEY(id_preference),
   FOREIGN KEY(id_user) REFERENCES Users(id_user)
);

CREATE TABLE User_device(
   id_device INT,
   user_id INT NOT NULL,
   device_type VARCHAR(50) NOT NULL,
   device_os VARCHAR(50) NOT NULL,
   date_creation DATETIME,
   id_user INT NOT NULL,
   PRIMARY KEY(id_device),
   FOREIGN KEY(id_user) REFERENCES Users(id_user)
);

CREATE TABLE SupportTickets_(
   id_ticket INT,
   id_user INT NOT NULL,
   subject VARCHAR(255),
   description_ TEXT,
   status_ VARCHAR(50),
   created_at_ DATETIME,
   updated_at_ VARCHAR(50),
   user_id VARCHAR(50),
   id_user_1 INT NOT NULL,
   PRIMARY KEY(id_ticket),
   FOREIGN KEY(id_user_1) REFERENCES Users(id_user)
);

CREATE TABLE AdViews_(
   id_ad_view INT,
   ad_id INT NOT NULL,
   user_id INT NOT NULL,
   view_timestamp DATETIME,
   id_user INT NOT NULL,
   PRIMARY KEY(id_ad_view),
   FOREIGN KEY(id_user) REFERENCES Users(id_user)
);

CREATE TABLE Streams(
   id_stream INT,
   user_id INT NOT NULL,
   category_id INT NOT NULL,
   title VARCHAR(255) NOT NULL,
   start_time DATETIME NOT NULL,
   end_time DATETIME,
   is_live LOGICAL,
   view_count INT,
   date_creation DATETIME,
   id_chat INT NOT NULL,
   id_raid INT NOT NULL,
   id_category_history INT NOT NULL,
   id_user INT NOT NULL,
   PRIMARY KEY(id_stream),
   UNIQUE(id_user),
   FOREIGN KEY(id_chat) REFERENCES Chats(id_chat),
   FOREIGN KEY(id_raid) REFERENCES Stream_Raids(id_raid),
   FOREIGN KEY(id_category_history) REFERENCES Stream_Categories_History(id_category_history),
   FOREIGN KEY(id_user) REFERENCES Users(id_user)
);

CREATE TABLE VODs(
   id_vod INT,
   stream_id INT,
   title VARCHAR(255) NOT NULL,
   date_creation DATETIME,
   id_stream INT NOT NULL,
   PRIMARY KEY(id_vod),
   FOREIGN KEY(id_stream) REFERENCES Streams(id_stream)
);

CREATE TABLE Clips(
   id_clip INT,
   user_id INT,
   stream_id INT,
   title VARCHAR(255) NOT NULL,
   date_creation DATETIME,
   clip_url VARCHAR(255),
   view_count INT,
   id_stream INT NOT NULL,
   PRIMARY KEY(id_clip),
   FOREIGN KEY(id_stream) REFERENCES Streams(id_stream)
);

CREATE TABLE Polls(
   id_poll TEXT,
   stream_id INT NOT NULL,
   question_ TEXT NOT NULL,
   date_creation DATETIME,
   is_active LOGICAL,
   id_stream INT NOT NULL,
   PRIMARY KEY(id_poll),
   FOREIGN KEY(id_stream) REFERENCES Streams(id_stream)
);

CREATE TABLE StreamAnalytics_(
   id_analytics INT,
   stream_id INT NOT NULL,
   total_viewers_ INT NOT NULL,
   peak_viewers INT NOT NULL,
   stream_duration_ INT,
   id_stream INT NOT NULL,
   PRIMARY KEY(id_analytics),
   FOREIGN KEY(id_stream) REFERENCES Streams(id_stream)
);

CREATE TABLE etre(
   id_ban INT,
   id_user INT,
   PRIMARY KEY(id_ban, id_user),
   FOREIGN KEY(id_ban) REFERENCES Bans(id_ban),
   FOREIGN KEY(id_user) REFERENCES Users(id_user)
);

CREATE TABLE gagner(
   id_user INT,
   id_points INT,
   PRIMARY KEY(id_user, id_points),
   FOREIGN KEY(id_user) REFERENCES Users(id_user),
   FOREIGN KEY(id_points) REFERENCES Channel_Points(id_points)
);

CREATE TABLE s_abonner(
   id_subscription INT,
   id_user INT,
   PRIMARY KEY(id_subscription, id_user),
   FOREIGN KEY(id_subscription) REFERENCES Subscriptions(id_subscription),
   FOREIGN KEY(id_user) REFERENCES Users(id_user)
);

CREATE TABLE donner(
   id_donation INT,
   id_user INT,
   PRIMARY KEY(id_donation, id_user),
   FOREIGN KEY(id_donation) REFERENCES Donations(id_donation),
   FOREIGN KEY(id_user) REFERENCES Users(id_user)
);

CREATE TABLE utilliser(
   id_user INT,
   id_emote INT,
   PRIMARY KEY(id_user, id_emote),
   FOREIGN KEY(id_user) REFERENCES Users(id_user),
   FOREIGN KEY(id_emote) REFERENCES Emotes(id_emote)
);

CREATE TABLE interagir(
   id_user INT,
   id_chat INT,
   PRIMARY KEY(id_user, id_chat),
   FOREIGN KEY(id_user) REFERENCES Users(id_user),
   FOREIGN KEY(id_chat) REFERENCES Chats(id_chat)
);

CREATE TABLE _utiliser(
   id_user INT,
   id_reward INT,
   PRIMARY KEY(id_user, id_reward),
   FOREIGN KEY(id_user) REFERENCES Users(id_user),
   FOREIGN KEY(id_reward) REFERENCES Channel_Points_Rewards(id_reward)
);

CREATE TABLE récuperer(
   id_tag_subscription INT,
   id_user INT,
   PRIMARY KEY(id_tag_subscription, id_user),
   FOREIGN KEY(id_tag_subscription) REFERENCES Tag_Subscriptions(id_tag_subscription),
   FOREIGN KEY(id_user) REFERENCES Users(id_user)
);

CREATE TABLE Asso_19(
   id_report INT,
   id_user INT,
   PRIMARY KEY(id_report, id_user),
   FOREIGN KEY(id_report) REFERENCES Reports(id_report),
   FOREIGN KEY(id_user) REFERENCES Users(id_user)
);

CREATE TABLE generer(
   id_user INT,
   id_clip INT,
   PRIMARY KEY(id_user, id_clip),
   FOREIGN KEY(id_user) REFERENCES Users(id_user),
   FOREIGN KEY(id_clip) REFERENCES Clips(id_clip)
);

CREATE TABLE payer(
   id_user INT,
   id_payment TEXT,
   PRIMARY KEY(id_user, id_payment),
   FOREIGN KEY(id_user) REFERENCES Users(id_user),
   FOREIGN KEY(id_payment) REFERENCES Payments_1(id_payment)
);

CREATE TABLE concerné(
   id_user INT,
   id_notification INT,
   PRIMARY KEY(id_user, id_notification),
   FOREIGN KEY(id_user) REFERENCES Users(id_user),
   FOREIGN KEY(id_notification) REFERENCES Notifications_1(id_notification)
);

CREATE TABLE réalisation(
   id_user INT,
   id_Users_achievements INT,
   PRIMARY KEY(id_user, id_Users_achievements),
   FOREIGN KEY(id_user) REFERENCES Users(id_user),
   FOREIGN KEY(id_Users_achievements) REFERENCES User_achievements_1(id_Users_achievements)
);

CREATE TABLE avoir_(
   id_user INT,
   id_role INT,
   PRIMARY KEY(id_user, id_role),
   FOREIGN KEY(id_user) REFERENCES Users(id_user),
   FOREIGN KEY(id_role) REFERENCES Roles_1(id_role)
);

CREATE TABLE etre_(
   id_moderator INT,
   id_role INT,
   PRIMARY KEY(id_moderator, id_role),
   FOREIGN KEY(id_moderator) REFERENCES Moderators(id_moderator),
   FOREIGN KEY(id_role) REFERENCES Roles_1(id_role)
);

CREATE TABLE bannir(
   id_moderator INT,
   id_ban INT,
   PRIMARY KEY(id_moderator, id_ban),
   FOREIGN KEY(id_moderator) REFERENCES Moderators(id_moderator),
   FOREIGN KEY(id_ban) REFERENCES Bans(id_ban)
);

CREATE TABLE concerner(
   id_user INT,
   id_mod_action INT,
   PRIMARY KEY(id_user, id_mod_action),
   FOREIGN KEY(id_user) REFERENCES Users(id_user),
   FOREIGN KEY(id_mod_action) REFERENCES Channel_Moderation_Actions(id_mod_action)
);

CREATE TABLE effectuer(
   id_moderator INT,
   id_mod_action INT,
   PRIMARY KEY(id_moderator, id_mod_action),
   FOREIGN KEY(id_moderator) REFERENCES Moderators(id_moderator),
   FOREIGN KEY(id_mod_action) REFERENCES Channel_Moderation_Actions(id_mod_action)
);

CREATE TABLE bannir_(
   id_moderator INT,
   id_chat_ban INT,
   PRIMARY KEY(id_moderator, id_chat_ban),
   FOREIGN KEY(id_moderator) REFERENCES Moderators(id_moderator),
   FOREIGN KEY(id_chat_ban) REFERENCES Stream_Chat_Bans(id_chat_ban)
);

CREATE TABLE concerner__(
   id_stream INT,
   id_chat_ban INT,
   PRIMARY KEY(id_stream, id_chat_ban),
   FOREIGN KEY(id_stream) REFERENCES Streams(id_stream),
   FOREIGN KEY(id_chat_ban) REFERENCES Stream_Chat_Bans(id_chat_ban)
);

CREATE TABLE avoir_____(
   id_stream INT,
   id_stream_tag INT,
   PRIMARY KEY(id_stream, id_stream_tag),
   FOREIGN KEY(id_stream) REFERENCES Streams(id_stream),
   FOREIGN KEY(id_stream_tag) REFERENCES Stream_tags_1(id_stream_tag)
);

CREATE TABLE ____avoir(
   id_tag INT,
   id_stream_tag INT,
   PRIMARY KEY(id_tag, id_stream_tag),
   FOREIGN KEY(id_tag) REFERENCES Tags(id_tag),
   FOREIGN KEY(id_stream_tag) REFERENCES Stream_tags_1(id_stream_tag)
);

CREATE TABLE accomplir(
   id_achievments INT,
   id_Users_achievements INT,
   PRIMARY KEY(id_achievments, id_Users_achievements),
   FOREIGN KEY(id_achievments) REFERENCES Achievements_1(id_achievments),
   FOREIGN KEY(id_Users_achievements) REFERENCES User_achievements_1(id_Users_achievements)
);

CREATE TABLE apparaitre(
   id_ad INT,
   id_stream INT,
   PRIMARY KEY(id_ad, id_stream),
   FOREIGN KEY(id_ad) REFERENCES Ads(id_ad),
   FOREIGN KEY(id_stream) REFERENCES Streams(id_stream)
);

CREATE TABLE faire____(
   id_user INT,
   id_event INT,
   PRIMARY KEY(id_user, id_event),
   FOREIGN KEY(id_user) REFERENCES Users(id_user),
   FOREIGN KEY(id_event) REFERENCES Stream_Events(id_event)
);

CREATE TABLE ___avoir_(
   id_stream INT,
   id_event INT,
   PRIMARY KEY(id_stream, id_event),
   FOREIGN KEY(id_stream) REFERENCES Streams(id_stream),
   FOREIGN KEY(id_event) REFERENCES Stream_Events(id_event)
);

CREATE TABLE Avoir___(
   id_stream INT,
   id_stream_ad INT,
   PRIMARY KEY(id_stream, id_stream_ad),
   FOREIGN KEY(id_stream) REFERENCES Streams(id_stream),
   FOREIGN KEY(id_stream_ad) REFERENCES Stream_Advertisements(id_stream_ad)
);

CREATE TABLE etre____(
   id_campaign INT,
   id_stream_ad INT,
   PRIMARY KEY(id_campaign, id_stream_ad),
   FOREIGN KEY(id_campaign) REFERENCES Advertising_Campaigns(id_campaign),
   FOREIGN KEY(id_stream_ad) REFERENCES Stream_Advertisements(id_stream_ad)
);

CREATE TABLE possedre(
   id_stream INT,
   id_category INT,
   PRIMARY KEY(id_stream, id_category),
   FOREIGN KEY(id_stream) REFERENCES Streams(id_stream),
   FOREIGN KEY(id_category) REFERENCES Categories(id_category)
);

CREATE TABLE ________________avoir______________________(
   id_category INT,
   id_category_history INT,
   PRIMARY KEY(id_category, id_category_history),
   FOREIGN KEY(id_category) REFERENCES Categories(id_category),
   FOREIGN KEY(id_category_history) REFERENCES Stream_Categories_History(id_category_history)
);

CREATE TABLE Asso_45(
   id_poll TEXT,
   id_option VARCHAR(50),
   PRIMARY KEY(id_poll, id_option),
   FOREIGN KEY(id_poll) REFERENCES Polls(id_poll),
   FOREIGN KEY(id_option) REFERENCES Poll_Options(id_option)
);

CREATE TABLE echanger(
   id_reward INT,
   id_redemption INT,
   PRIMARY KEY(id_reward, id_redemption),
   FOREIGN KEY(id_reward) REFERENCES Channel_Points_Rewards(id_reward),
   FOREIGN KEY(id_redemption) REFERENCES Channel_Points_Redemptions(id_redemption)
);

CREATE TABLE attribuer(
   id_user INT,
   id_redemption INT,
   PRIMARY KEY(id_user, id_redemption),
   FOREIGN KEY(id_user) REFERENCES Users(id_user),
   FOREIGN KEY(id_redemption) REFERENCES Channel_Points_Redemptions(id_redemption)
);

CREATE TABLE payer_(
   id_subscription INT,
   id_payment TEXT,
   PRIMARY KEY(id_subscription, id_payment),
   FOREIGN KEY(id_subscription) REFERENCES Subscriptions(id_subscription),
   FOREIGN KEY(id_payment) REFERENCES Payments_1(id_payment)
);

CREATE TABLE Recevoir(
   id_user INT,
   id_notification_log INT,
   PRIMARY KEY(id_user, id_notification_log),
   FOREIGN KEY(id_user) REFERENCES Users(id_user),
   FOREIGN KEY(id_notification_log) REFERENCES User_Notifications_(id_notification_log)
);

CREATE TABLE envoyer(
   id_notification INT,
   id_notification_log INT,
   PRIMARY KEY(id_notification, id_notification_log),
   FOREIGN KEY(id_notification) REFERENCES Notifications_1(id_notification),
   FOREIGN KEY(id_notification_log) REFERENCES User_Notifications_(id_notification_log)
);

CREATE TABLE Asso_53(
   id_user INT,
   id_raid_log INT,
   PRIMARY KEY(id_user, id_raid_log),
   FOREIGN KEY(id_user) REFERENCES Users(id_user),
   FOREIGN KEY(id_raid_log) REFERENCES RaidLogs(id_raid_log)
);

CREATE TABLE Asso_54(
   id_raid INT,
   id_raid_log INT,
   PRIMARY KEY(id_raid, id_raid_log),
   FOREIGN KEY(id_raid) REFERENCES Stream_Raids(id_raid),
   FOREIGN KEY(id_raid_log) REFERENCES RaidLogs(id_raid_log)
);

CREATE TABLE Modifier(
   id_user INT,
   id_reset INT,
   PRIMARY KEY(id_user, id_reset),
   FOREIGN KEY(id_user) REFERENCES Users(id_user),
   FOREIGN KEY(id_reset) REFERENCES PasswordResets(id_reset)
);

CREATE TABLE essai(
   id_user INT,
   id_attempt INT,
   PRIMARY KEY(id_user, id_attempt),
   FOREIGN KEY(id_user) REFERENCES Users(id_user),
   FOREIGN KEY(id_attempt) REFERENCES LoginAttempts(id_attempt)
);

CREATE TABLE Asso_58(
   id_ad INT,
   id_ad_view INT,
   PRIMARY KEY(id_ad, id_ad_view),
   FOREIGN KEY(id_ad) REFERENCES Ads(id_ad),
   FOREIGN KEY(id_ad_view) REFERENCES AdViews_(id_ad_view)
);

CREATE TABLE signaler(
   id_user INT,
   id_reports INT,
   PRIMARY KEY(id_user, id_reports),
   FOREIGN KEY(id_user) REFERENCES Users(id_user),
   FOREIGN KEY(id_reports) REFERENCES UserReports(id_reports)
);
